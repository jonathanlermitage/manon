# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

strategy:
  matrix:
    run_on_jdk17:
      CUSTOM_JDK_VERSION_OPTION: '17'

steps:
  - script: echo '##vso[task.setvariable variable=MANON_TEST_SQL_JDBC_URL]jdbc:mariadb://127.0.0.1:3307/manon?useUnicode=true&characterEncoding=utf8&autoReconnect=true'
  - script: echo '##vso[task.setvariable variable=MANON_TEST_BATCH_SQL_JDBC_URL]jdbc:mariadb://127.0.0.1:3308/manon_batch?useUnicode=true&characterEncoding=utf8&autoReconnect=true'
  - script: echo '##vso[task.setvariable variable=MANON_TEST_REDIS_PORT]6380'
  - script: sudo /etc/init.d/mysql stop
  - script: sudo netstat -antp
  - task: DockerCompose@1 # https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/docker-compose-v1?view=azure-pipelines
    inputs:
      containerregistrytype: 'Azure Container Registry'
      dockerComposeFile: './docker/docker-compose-test-azure.yml'
      action: 'Run a Docker Compose command'
      dockerComposeCommand: 'up -d'
      projectName: 'manon_prj_for_azure'
  - script: sleep 15
  - script: sudo netstat -antp
  - script: mysql --user=root --password=woot --host=127.0.0.1 --port=3307 --execute="show databases;"
  - script: mysql --user=root --password=woot --host=127.0.0.1 --port=3308 --execute="show databases;"
  - task: Maven@4 # see help https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/maven?view=azure-devops
    inputs:
      mavenPomFile: 'pom.xml'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: $(CUSTOM_JDK_VERSION_OPTION)
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      goals: 'verify'
      options: '-P test-mariadb,coverage,ci -B -U'
